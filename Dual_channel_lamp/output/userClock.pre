
# 1 "D:\Work\project\遥控+接收主程序\双信道接收2\src\userClock.c"

# 17 "D:\Work\project\遥控+接收主程序\双信道接收2\src\system.h"
typedef enum{
CPU_FREQUENCY_EXTERNAL = 0x00,
CPU_FREQUENCY_31K = 0x01,
CPU_FREQUENCY_125K = 0x11,
CPU_FREQUENCY_250K = 0x21,
CPU_FREQUENCY_500K = 0x31,
CPU_FREQUENCY_1M = 0x41,
CPU_FREQUENCY_2M = 0x51,
CPU_FREQUENCY_4M = 0x61,
CPU_FREQUENCY_8M = 0x71
}CPU_FREQUENCY_e;

typedef enum{
PORTB_CHANGE_ISR_ENABLE = 0x80,
INT0_ISR_ENABLE = 0x10,
TIMER0_ISR_ENABLE = 0x20,
TIMER1_ISR_ENABLE = 0x01,
TIMER2_ISR_ENABLE = 0x02,
ADC_ISR_ENABLE = 0x40,
}INT_ENABLE_FLAG_e;

typedef enum{
PORTB_CHANGE_ISR_TOUCH = 0x01,
INT0_ISR_TOUCH = 0x02,
TIMER0_ISR_TOUCH = 0x04,
TIMER1_ISR_TOUCH = 0x01,
TIMER2_ISR_TOUCH = 0x02,
ADC_ISR_TOUCH = 0x40,
}INT_TOUCH_FLAG_e;

extern void Interrupt_init(void);
extern void soft_delay_ms(unsigned int ms);
extern void system_set_CPU_frequency(CPU_FREQUENCY_e CPU_Frequency);
extern void clear_interrupt_flag(void);
extern void system_to_sleep(void);
extern void Enable_Interrupt(void);
extern void Disable_Interrupt(void);

# 7 "D:\Work\project\遥控+接收主程序\双信道接收2\src\userClock.h"
extern unsigned char clk_flag;

# 32
void getClock(void);

# 5 "D:\Work\project\遥控+接收主程序\双信道接收2\src\userClock.c"
unsigned char clk_flag;
static unsigned char dClkCnt0;
extern volatile unsigned char clk_count;




void getClock(void)
{
unsigned char temp = 0;
clk_flag = 0;

if(clk_count >= 1)
{
clk_count -= 1;
temp = dClkCnt0;
clk_flag = temp ^ (++dClkCnt0);
}
}
